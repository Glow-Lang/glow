#lang glow
@interaction([A, B])
let coinFlip = (wagerAmount) => {
    @A assert! canReach(A_wins);
    @A let randA = randomUInt256();
    @verifiably(A) let commitment = digest(randA);
    publish! A -> commitment; deposit! A -> wagerAmount;
    @B assert! canReach(B_wins);
    @B let randB = randomUInt256();
    publish! B -> randB; deposit! B -> wagerAmount;
    publish! A -> randA;
    verify! commitment;
    if (((randA ^^^ randB) &&& 1) == 0) {
        A_wins: withdraw! A <- 2*wagerAmount
    } else {
        B_wins: withdraw! B <- 2*wagerAmount
    }
};
