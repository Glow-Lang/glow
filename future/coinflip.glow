#lang glow
@interaction([A, B])
let coinFlip = (wagerAmount) => {
    @A assert! canReach(A_wins);
    @A let randA = randomUInt256();
    @A @verifiably let commitment = digest(randA);
    @A publish! commitment; @A deposit! wagerAmount;
    @B assert! canReach(B_wins);
    @A let randB = randomUInt256();
    @B publish! randB; @B deposit! wagerAmount;
    @A publish! randA;
    verify! commitment;
    if ((randA logxor randB) logand 1 == 0) {
    A_wins: withdraw! A <- 2*wagerAmount } else {
    B_wins: withdraw! B <- 2*wagerAmount }}
