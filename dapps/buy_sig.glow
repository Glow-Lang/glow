// Decentralized Applications:
// - "swaps" where you sign a message for another blockchain
// - rental where you sign a key access message that some door's / some car's reader will accept
// - "Diploma" or other affidavit
// - Usually for purely digital goods. For physical ones you will want the last step to be
//   sending the money to some multisig escrow contract for fall back arbitration.

@interaction([Buyer, Seller])
let buySig = (digest : Digest, price : Nat) => {
  deposit! Buyer -> price;

  @publicly!(Seller) let signature = sign(digest);
  // The line above is equivalent to the three below:
  //// @verifiably!(Seller) let signature = sign(digest);
  //// publish! Seller -> signature;
  //// verify! signature; // This line is itself the same as the one below:
  ////// require! isValidSignature(Seller, signature, digest);

  withdraw! Seller <- price;
};
