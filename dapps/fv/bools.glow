#lang glow
// TODO: insert escrow in a compiler pass
@interaction([A, B])
let coinFlip = (x : Nat, flag : Bool) => {

   branch0 : deposit! A -> x;

   // @A assert! (canReach(branch1) OR canReach(branch2));
   // @A assert! canReach(branch1);
    @B assert! canReach(branch1);
   // @A assert! canReach(branch2);
   @B assert! canReach(branch2);
   


   @B let bBB = input(Bool, "Enter B's second parameter:");

   let someBoolVal = false;

   @B let bB = input(Bool, "Enter B's parameter:");
   publish! B -> bB;


   @A let bA = input(Bool, "Enter A's parameter:");
   publish! A -> bA;

   
   publish! B -> bBB;

   deposit! A -> x;
   deposit! B -> x;

    if (bA == bB) {
        branch1 : withdraw! A <- 2*x;
    } else {
        branch2 : withdraw! B <- 2*x;
    }
};
