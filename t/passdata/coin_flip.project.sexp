(@module (begin end)
         (@label begin)
         (@debug-label dlb)
         (def coinFlip
              (@make-interaction
               ((@record (participants (@list A B)) (assets (@list DefaultToken))))
               (wagerAmount escrowAmount)
               (begin0 end0)
               (#f
                (@label begin0)
                (@debug-label dlb0)
                (@label cp)
                (consensus:set-participant A)
                (@debug-label dlb1)
                (consensus:set-participant A)
                (@debug-label dlb2)
                (consensus:set-participant A)
                (def commitment (expect-published 'commitment))
                (@debug-label dlb3)
                (def tmp (@app + wagerAmount escrowAmount))
                (consensus:set-participant A)
                (expect-deposited (@record (DefaultToken tmp)))
                (@debug-label dlb4)
                (@label cp0)
                (consensus:set-participant B)
                (@debug-label dlb5)
                (consensus:set-participant B)
                (def randB (expect-published 'randB))
                (@debug-label dlb6)
                (consensus:set-participant B)
                (expect-deposited (@record (DefaultToken wagerAmount)))
                (@debug-label dlb7)
                (@label cp1)
                (consensus:set-participant A)
                (def randA (expect-published 'randA))
                (@debug-label dlb8)
                (def tmp0 (digest randA))
                (def tmp1 (== commitment tmp0))
                (require! tmp1)
                (@debug-label dlb9)
                (def tmp2 (@app bitwise-xor randA randB))
                (def tmp3 (@app bitwise-and tmp2 1))
                (def tmp4 (== tmp3 0))
                (@label begin-switch)
                (switch tmp4
                        (#t
                         (def tmp5 (@app * 2 wagerAmount))
                         (def tmp6 (@app + tmp5 escrowAmount))
                         (consensus:withdraw A (@record (DefaultToken tmp6)))
                         (return (@tuple)))
                        (#f
                         (@debug-label dlb10)
                         (def tmp7 (@app * 2 wagerAmount))
                         (consensus:withdraw B (@record (DefaultToken tmp7)))
                         (@debug-label dlb11)
                         (consensus:withdraw A (@record (DefaultToken escrowAmount)))
                         (return (@tuple))))
                (@label end-switch)
                (@label end0))
               (A (@label begin0)
                  (@debug-label dlb0)
                  (@label cp)
                  (participant:set-participant A)
                  (def randA (@app randomUInt256))
                  (@debug-label dlb1)
                  (participant:set-participant A)
                  (def commitment (digest randA))
                  (@debug-label dlb2)
                  (participant:set-participant A)
                  (add-to-publish 'commitment commitment)
                  (@debug-label dlb3)
                  (def tmp (@app + wagerAmount escrowAmount))
                  (participant:set-participant A)
                  (add-to-deposit (@record (DefaultToken tmp)))
                  (@debug-label dlb4)
                  (@label cp0)
                  (participant:set-participant B)
                  (@debug-label dlb5)
                  (participant:set-participant B)
                  (def randB (expect-published 'randB))
                  (@debug-label dlb6)
                  (participant:set-participant B)
                  (expect-deposited (@record (DefaultToken wagerAmount)))
                  (@debug-label dlb7)
                  (@label cp1)
                  (participant:set-participant A)
                  (add-to-publish 'randA randA)
                  (@debug-label dlb8)
                  (def tmp0 (digest randA))
                  (def tmp1 (== commitment tmp0))
                  (require! tmp1)
                  (@debug-label dlb9)
                  (def tmp2 (@app bitwise-xor randA randB))
                  (def tmp3 (@app bitwise-and tmp2 1))
                  (def tmp4 (== tmp3 0))
                  (@label begin-switch)
                  (switch tmp4
                          (#t
                           (def tmp5 (@app * 2 wagerAmount))
                           (def tmp6 (@app + tmp5 escrowAmount))
                           (participant:withdraw A (@record (DefaultToken tmp6)))
                           (return (@tuple)))
                          (#f
                           (@debug-label dlb10)
                           (def tmp7 (@app * 2 wagerAmount))
                           (participant:withdraw B (@record (DefaultToken tmp7)))
                           (@debug-label dlb11)
                           (participant:withdraw A (@record (DefaultToken escrowAmount)))
                           (return (@tuple))))
                  (@label end-switch)
                  (@label end0))
               (B (@label begin0)
                  (@debug-label dlb0)
                  (@label cp)
                  (participant:set-participant A)
                  (@debug-label dlb1)
                  (participant:set-participant A)
                  (@debug-label dlb2)
                  (participant:set-participant A)
                  (def commitment (expect-published 'commitment))
                  (@debug-label dlb3)
                  (def tmp (@app + wagerAmount escrowAmount))
                  (participant:set-participant A)
                  (expect-deposited (@record (DefaultToken tmp)))
                  (@debug-label dlb4)
                  (@label cp0)
                  (participant:set-participant B)
                  (def randB (@app randomUInt256))
                  (@debug-label dlb5)
                  (participant:set-participant B)
                  (add-to-publish 'randB randB)
                  (@debug-label dlb6)
                  (participant:set-participant B)
                  (add-to-deposit (@record (DefaultToken wagerAmount)))
                  (@debug-label dlb7)
                  (@label cp1)
                  (participant:set-participant A)
                  (def randA (expect-published 'randA))
                  (@debug-label dlb8)
                  (def tmp0 (digest randA))
                  (def tmp1 (== commitment tmp0))
                  (require! tmp1)
                  (@debug-label dlb9)
                  (def tmp2 (@app bitwise-xor randA randB))
                  (def tmp3 (@app bitwise-and tmp2 1))
                  (def tmp4 (== tmp3 0))
                  (@label begin-switch)
                  (switch tmp4
                          (#t
                           (def tmp5 (@app * 2 wagerAmount))
                           (def tmp6 (@app + tmp5 escrowAmount))
                           (participant:withdraw A (@record (DefaultToken tmp6)))
                           (return (@tuple)))
                          (#f
                           (@debug-label dlb10)
                           (def tmp7 (@app * 2 wagerAmount))
                           (participant:withdraw B (@record (DefaultToken tmp7)))
                           (@debug-label dlb11)
                           (participant:withdraw A (@record (DefaultToken escrowAmount)))
                           (return (@tuple))))
                  (@label end-switch)
                  (@label end0))))
         (return (@tuple))
         (@label end))
