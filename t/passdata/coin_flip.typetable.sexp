(hash (* (type:arrow (@list (type:name 'Int) (type:name 'Int)) (type:name 'Int)))
      (+ (type:arrow (@list (type:name 'Int) (type:name 'Int)) (type:name 'Int)))
      (A (type:name 'Participant))
      (B (type:name 'Participant))
      (bitwise-and (type:arrow (@list (type:name 'Int) (type:name 'Int)) (type:name 'Int)))
      (bitwise-xor (type:arrow (@list (type:name 'Int) (type:name 'Int)) (type:name 'Int)))
      (coinFlip
       (type:arrow
        (@list (type:name 'Participant) (type:name 'Participant) (type:name 'Int) (type:name 'Int))
        (type:tuple (@list))))
      (commitment (type:name 'Digest))
      (escrowAmount (type:name 'Int))
      (randA (type:name-subtype 'Nat (type:name 'Int)))
      (randB (type:name-subtype 'Nat (type:name 'Int)))
      (randomUInt256 (type:arrow (@list) (type:name-subtype 'Nat (type:name 'Int))))
      (wagerAmount (type:name 'Int))
      (0 (type:name-subtype 'Nat (type:name 'Int)))
      (1 (type:name-subtype 'Nat (type:name 'Int)))
      (2 (type:name-subtype 'Nat (type:name 'Int)))
      ((== commitment (digest randA)) (type:name 'Bool))
      ((== (@app bitwise-and (@app bitwise-xor randA randB) 1) 0) (type:name 'Bool))
      ((@app * 2 wagerAmount) (type:name 'Int))
      ((@app + wagerAmount escrowAmount) (type:name 'Int))
      ((@app + (@app * 2 wagerAmount) escrowAmount) (type:name 'Int))
      ((@app bitwise-and (@app bitwise-xor randA randB) 1) (type:name 'Int))
      ((@app bitwise-xor randA randB) (type:name 'Int))
      ((@app randomUInt256) (type:name-subtype 'Nat (type:name 'Int)))
      ((@make-interaction
        ((@record (participants (@list A B)) (assets (@list DefaultToken))))
        (wagerAmount escrowAmount)
        (@debug-label dlb0)
        (@ A (def randA (@app randomUInt256)))
        (@debug-label dlb1)
        (@ A (def commitment (digest randA)))
        (@debug-label dlb2)
        (publish! A commitment)
        (@debug-label dlb3)
        (deposit! A (@record (DefaultToken (@app + wagerAmount escrowAmount))))
        (@debug-label dlb4)
        (@ B (def randB (@app randomUInt256)))
        (@debug-label dlb5)
        (publish! B randB)
        (@debug-label dlb6)
        (deposit! B (@record (DefaultToken wagerAmount)))
        (@debug-label dlb7)
        (publish! A randA)
        (@debug-label dlb8)
        (require! (== commitment (digest randA)))
        (@debug-label dlb9)
        (switch (== (@app bitwise-and (@app bitwise-xor randA randB) 1) 0)
                (#t (withdraw! A (@record (DefaultToken (@app + (@app * 2 wagerAmount) escrowAmount)))))
                (#f (block
                      (@debug-label dlb10)
                      (withdraw! B (@record (DefaultToken (@app * 2 wagerAmount))))
                      (@debug-label dlb11)
                      (withdraw! A (@record (DefaultToken escrowAmount)))))))
       (type:arrow
        (@list (type:name 'Participant) (type:name 'Participant) (type:name 'Int) (type:name 'Int))
        (type:tuple (@list))))
      ((block
         (@debug-label dlb10)
         (withdraw! B (@record (DefaultToken (@app * 2 wagerAmount))))
         (@debug-label dlb11)
         (withdraw! A (@record (DefaultToken escrowAmount))))
       (type:tuple (@list)))
      ((deposit! A (@record (DefaultToken (@app + wagerAmount escrowAmount)))) (type:tuple (@list)))
      ((deposit! B (@record (DefaultToken wagerAmount))) (type:tuple (@list)))
      ((digest randA) (type:name 'Digest))
      ((require! (== commitment (digest randA))) (type:tuple (@list)))
      ((switch (== (@app bitwise-and (@app bitwise-xor randA randB) 1) 0)
               (#t (withdraw! A (@record (DefaultToken (@app + (@app * 2 wagerAmount) escrowAmount)))))
               (#f (block
                     (@debug-label dlb10)
                     (withdraw! B (@record (DefaultToken (@app * 2 wagerAmount))))
                     (@debug-label dlb11)
                     (withdraw! A (@record (DefaultToken escrowAmount))))))
       (type:tuple (@list)))
      ((withdraw! A (@record (DefaultToken escrowAmount))) (type:tuple (@list)))
      ((withdraw! A (@record (DefaultToken (@app + (@app * 2 wagerAmount) escrowAmount)))) (type:tuple (@list)))
      ((withdraw! B (@record (DefaultToken (@app * 2 wagerAmount)))) (type:tuple (@list))))
